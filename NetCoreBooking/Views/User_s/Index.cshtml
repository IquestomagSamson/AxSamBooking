@*@model IEnumerable<Booking_Room.Models.User_s>

    @{
        ViewData["Title"] = "Index";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

    <button type="button" class="btn btn-success">
        <a asp-action="Create"><span style="font-size:1vw; color:white;">Create New</span></a>
    </button>
    <br /><br />
    <form asp-controller="User_s" asp-action="Index" method="get">
        <p>
            Title: <input type="text" name="seacrhString">
            <input type="submit" value="Filter" />
        </p>
    </form>
    <br />

    <table class="table table-striped table-hover table-bordered">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.User_id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.User_name)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.User_id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.User_name)
                    </td>

                    <td>
                        <a asp-action="Edit" asp-route-id="@item.User_id">Edit</a> |
                        <a asp-action="Delete" asp-route-id="@item.User_id">Delete</a>
                    </td>
                </tr>
            }

        </tbody>
    </table>

    <div class="card-footer">
        <nav aria-label="Page navigation example">
            <ul class="pagination">

                @{
                    int position;
                    int pageCurrent = ViewBag.pageCurrent;
                    string seacrhString = ViewBag.seacrhString;
                    /*float*/
                    int numSize = ViewBag.numSize;
                    if (pageCurrent > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", "User_s", new { seacrhString = (seacrhString != "" ? seacrhString : null), page = pageCurrent-1 })" tabindex="-1">Previous</a>
                        </li>
                    }

                    for (position = 1; position <= numSize; position++)
                    {

                        if (position == pageCurrent)
                        {
                            <li class="page-item active"><a class="page-link" href="@Url.Action("Index", "User_s", new { seacrhString = (seacrhString != "" ? seacrhString : null), page = position })">@position</a></li>
                        }

                        else
                        {
                            <li class="page-item"><a class="page-link" href="@Url.Action("Index", "User_s", new { seacrhString = (seacrhString != "" ? seacrhString : null), page = position })">@position</a></li>
                        }

                    }
                    if (pageCurrent > 0 && pageCurrent < numSize)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", "User_s", new { seacrhString = (seacrhString != "" ? seacrhString : null), page = pageCurrent+1 })" tabindex="-1">Next</a>
                        </li>
                    }

                }

            </ul>
        </nav>
    </div>*@


@*---------------------------------------------------------------------------------------------------------------------------------*@
@using NetCoreBooking_PagedList;
@model PaginatedList<Booking_Room.Models.User_s>
@{
    ViewData["Title"] = "Index";
}

<style>
    @Html.Raw("@")import url(https://fonts.googleapis.com/css?family=Open+Sans);

body{
  background: #f2f2f2;
  font-family: 'Open Sans', sans-serif;
}

.search {
  width: 100%;
  position: relative;
  display: flex;
}

.searchTerm {
  width: 40%;
  border: 3px solid #00B4CC;
  border-right: none;
  padding: 5px;
  height: 36px;
  border-radius: 5px 0 0 5px;
  outline: none;
  color: #9DBFAF;
}

.searchTerm:focus{
  color: #00B4CC;
}

.searchButton {
  width: 40px;
  height: 36px;
  border: 1px solid #00B4CC;
  background: #00B4CC;
  text-align: center;
  color: #fff;
  border-radius: 0 5px 5px 0;
  cursor: pointer;
  font-size: 20px;
}


</style>

<p>
    <a asp-action="Create" class="btn btn-info" style="font-size:1vw; color:white">Create</a>
</p>

<br />
<form asp-action="Index" method="get">
    @*<div class="form-actions no-color">
            <p>
                Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" placeholder="Search here..." />
                <input type="submit" value="Search" class="btn btn-success" style="font-size:1vw; color:white" />
            </p>
        </div>*@


    <div class="form-actions no-color d-flex d-inline-block">
        <input type="text" class="searchTerm" name="SearchString" value="@ViewData["CurrentFilter"]" placeholder="What are you looking for?">
        <button type="submit" class="searchButton" value="Search">
            <i class="fa fa-search"></i>
        </button>
    </div>
</form>
<br />
<table class="table table-striped table-bordered display" style="width:100%">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">User ID</a>
            </th>

            <th>
                <a asp-action="Index" asp-route-currentFilter="@ViewData["CurrentFilter"]">User name</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.User_id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.User_name)
                </td>

                <td>
                    <a asp-action="Edit" asp-route-id="@item.User_id">Edit</a> |
                    <a asp-action="Delete" asp-route-id="@item.User_id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   style="font-size:1vw;" class="btn btn-outline-info @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-outline-info @nextDisabled" style="font-size:1vw;">
    Next
</a>
<br />
<br />
<a asp-action="Index" type="button" class="btn btn-link" style="font-size:1vw; color:dodgerblue">Back to Full List</a>
<br />
<br />